import { Request, Response } from 'express';
import {{action}}Adapter from '../../Adapters/{{grouping}}/{{action}}Adapter';
import {{action}}Handler from '../../../../Application/Commands/Handler/{{grouping}}/{{action}}Handler';
import { injectable, inject } from 'inversify';

@injectable()
class {{action}}Action
{
    private adapter: {{action}}Adapter;
    private handler: {{action}}Handler;

    public constructor(
        @inject({{action}}Adapter) adapter: {{action}}Adapter,
        @inject({{action}}Handler) handler: {{action}}Handler
    ) {
        this.handler = handler;
        this.adapter = adapter;
    }

    public async execute(req: Request, res: Response)
    {
        const command = this.adapter.adapt(req.body);

        await this.handler.execute(command);

        return res.status(200).json({message: 'ok'});
    }
}

export default {{action}}Action;